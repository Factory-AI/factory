name: Issue label Slack notifier

on:
  issues:
    types:
      - labeled

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare summary
        id: prepare
        uses: actions/github-script@v7
        with:
          script: |
            const issueBody = (context.payload.issue.body || '').trim();
            let summary = issueBody;
            if (summary) {
              summary = summary.replace(/\r\n/g, '\n');
              summary = summary.replace(/\n{3,}/g, '\n\n');
              if (summary.length > 400) {
                summary = summary.slice(0, 400).trimEnd() + 'â€¦';
              }
            }
            core.setOutput('summary', summary);

      - name: Add ðŸ‘€ reaction
        if: github.event.action == 'labeled'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              content: 'eyes'
            });

      - name: Send Slack notification
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_SUMMARY: ${{ steps.prepare.outputs.summary }}
        run: |
          if [ -z "${WEBHOOK_URL}" ]; then
            echo "Slack webhook URL not provided." >&2
            exit 1
          fi

          if ! command -v jq >/dev/null 2>&1; then
            echo "jq is required but not available" >&2
            exit 1
          fi

          payload=$(jq -n --arg url "$ISSUE_URL" --arg title "$ISSUE_TITLE" --arg summary "$ISSUE_SUMMARY" '{
            text: $url,
            unfurl_links: true,
            unfurl_media: false,
            blocks: (
              if ($summary | length) > 0 then
                [
                  {
                    type: "section",
                    text: {
                      type: "mrkdwn",
                      text: "<\($url)|\($title)>"
                    }
                  },
                  {
                    type: "section",
                    text: {
                      type: "mrkdwn",
                      text: $summary
                    }
                  }
                ]
              else
                [
                  {
                    type: "section",
                    text: {
                      type: "mrkdwn",
                      text: "<\($url)|\($title)>"
                    }
                  }
                ]
              end
            )
          }')

          curl -X POST -H 'Content-type: application/json' --data "$payload" "$WEBHOOK_URL"
